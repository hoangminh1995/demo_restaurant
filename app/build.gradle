apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: 'buildscripts/jacoco.gradle'

androidExtensions {
    experimental = true
}

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.demorestaurant"
        minSdkVersion 21
        targetSdkVersion 30
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    dataBinding {
        enabled = true
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            buildConfigField "String", "BASE_URL", "\"https://api.themoviedb.org/\""
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    kapt {
        generateStubs = true
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //design
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$appcompat"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // retrofit
    implementation "com.google.code.gson:gson:$gson"
    implementation "com.squareup.okhttp3:logging-interceptor:$logging_interceptor"
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"

    // room
    implementation "androidx.room:room-runtime:$room_db"
    kapt "androidx.room:room-compiler:$room_db"
    implementation "androidx.room:room-rxjava2:$rxjava"
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
    implementation "com.facebook.stetho:stetho:$stetho"

    // viewmodel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_viewmodel"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycle_viewmodel"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_viewmodel"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_viewmodel"

    // rxjava
    implementation "io.reactivex.rxjava2:rxjava:$rxjava"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid"
    implementation "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:$rxjava_adapter"

    // rxbinding
    implementation "com.jakewharton.rxbinding:rxbinding:$rx_binding"

    // di
    implementation "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"

    //multidex
    implementation "androidx.multidex:multidex:$multidex"

    implementation "org.jetbrains.anko:anko-commons:0.10.7"

    // glide
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    // timber
    implementation "com.jakewharton.timber:timber:$timber"

    // test
    testImplementation "org.robolectric:robolectric:3.8"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "android.arch.core:core-testing:1.1.1"
}
